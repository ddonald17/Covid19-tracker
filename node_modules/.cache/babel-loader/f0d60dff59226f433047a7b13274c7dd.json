{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashwi\\\\web\\\\react\\\\covid19 tracker\\\\c19\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { MenuItem, Select, FormControl, Card, CardContent } from '@material-ui/core';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport './App.css';\nimport Table from './Table';\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        setTableData(data);\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Covid-19 Tracker\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"app__dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    variant: \"outlined\",\n    value: country,\n    onChange: onCountryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"worldwide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"Worldwide\"), countries.map(country => /*#__PURE__*/React.createElement(MenuItem, {\n    value: country.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \" \", country.name, \" \"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Covid cases\",\n    cases: countryInfo.todayCases,\n    total: countryInfo.cases,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Recovered\",\n    cases: countryInfo.todayRecovered,\n    total: countryInfo.recovered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Deaths\",\n    cases: countryInfo.todayDeaths,\n    total: countryInfo.deaths,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Map, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"App-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Live Cases by Country\"), /*#__PURE__*/React.createElement(Table, {\n    countries: tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Worldwide new cases\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ashwi/web/react/covid19 tracker/c19/src/App.js"],"names":["React","useEffect","useState","MenuItem","Select","FormControl","Card","CardContent","InfoBox","Map","Table","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","onCountryChange","event","countryCode","target","url","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {MenuItem, Select, FormControl, Card, CardContent} from '@material-ui/core';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport './App.css';\nimport Table from './Table';\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() =>{ \n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then((response) => response.json())\n    .then((data) =>{\n    setCountryInfo(data);\n   });\n  },[]);\n  \n  useEffect(()=>{\n     const getCountriesData = async () => {\n        await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => (\n            {\n              name : country.country,\n              value : country.countryInfo.iso2\n            }));\n            setTableData(data);\n            setCountries(countries);\n        })\n    }\n\n    getCountriesData();\n  } ,[]);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n\n   const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n   await fetch(url)\n   .then(response => response.json())\n   .then(data => {\n     setCountry(countryCode);\n     setCountryInfo(data);\n   })\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"App-left\">\n      <div className=\"app__header\">\n      <h1>Covid-19 Tracker</h1>\n      <FormControl className=\"app__dropdown\">\n          <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\n              <MenuItem value='worldwide'>Worldwide</MenuItem>\n               {countries.map((country) => (\n              <MenuItem value={country.value}> {country.name} </MenuItem>\n             ))}\n          \n          </Select>\n      </FormControl>\n      </div>\n     \n      <div className=\"app__stats\">\n        <InfoBox title=\"Covid cases\" cases={countryInfo.todayCases} total={countryInfo.cases} />\n        <InfoBox title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered} />\n        <InfoBox title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths} />\n\n      </div>\n\n      <Map />\n       \n      </div>\n      \n     <Card className=\"App-right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          <h3>Worldwide new cases</h3>\n        </CardContent> \n     </Card>\n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}